from configurations.structure.experimentation_configuration import ExperimentationConfiguration

lunar_lander = ExperimentationConfiguration(
    experimentation_name='lunar_lander',
    environment_name='LunarLanderRllib',
)

# Ray
lunar_lander.ray_local_mode = False

# Reinforcement Learning
lunar_lander.reinforcement_learning_configuration.training_name = 'base'
lunar_lander.reinforcement_learning_configuration.number_environment_runners = 16
lunar_lander.reinforcement_learning_configuration.number_environment_per_environment_runners = 1
lunar_lander.reinforcement_learning_configuration.number_gpus_per_learner = 1
lunar_lander.reinforcement_learning_configuration.train_batch_size = 40_000
lunar_lander.reinforcement_learning_configuration.minibatch_size = 10_000
lunar_lander.reinforcement_learning_configuration.batch_mode = 'complete_episodes'
lunar_lander.reinforcement_learning_configuration.number_epochs = 16
lunar_lander.reinforcement_learning_configuration.clip_policy_parameter = 0.1

# Video Episodes
lunar_lander.video_episodes_generation_configuration.number_environment_runners = 5

# Trajectory Dataset Generation
lunar_lander.trajectory_dataset_generation_configuration.number_environment_runners = 10
lunar_lander.trajectory_dataset_generation_configuration.number_iterations = 100
lunar_lander.trajectory_dataset_generation_configuration.minimal_steps_per_iteration_per_environment_runners = 1000

# Rendering Trajectory Dataset Generation
lunar_lander.rendering_trajectory_dataset_generation_configuration.number_environment_runners = 5
lunar_lander.rendering_trajectory_dataset_generation_configuration.number_iterations = 10
lunar_lander.rendering_trajectory_dataset_generation_configuration.minimal_steps_per_iteration_per_environment_runners = 100

# Surrogate Policy Training
lunar_lander.surrogate_policy_training_configuration.training_name = '4_cluster_1_repulsion'
lunar_lander.surrogate_policy_training_configuration.clusterization_function_configuration.update({
    'number_cluster': 4,
})
lunar_lander.surrogate_policy_training_configuration.clusterization_loss_configuration.update({
    'number_centroids_repulsion': 1,
})